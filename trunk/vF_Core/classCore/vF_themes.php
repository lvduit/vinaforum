<?php vF_Check();# ----------------------# Class: Themes Complie# Author: Yplit# Date: 16/6/2012#-----------------------class vF_themes{	private static $_instance;	protected $_templateCache = array();	private $_templateName = '';	protected $_params = array();	protected $_templateError = array();	protected $_languageId = 0;	protected $_styleId = 0;	public function __construct()	{	}	public static function getInstance()	{		if( !self::$_instance )		{			self::$_instance = new self();		}		return self::$_instance;	}	public function create( $templateName, $params = array() )	{		$this->_templateName = $templateName;		if( $params )		{			$this->addParams( $params );		}	}	public function addParams( $params )	{		if( !$this->_params )		{			return ( $this->_params = $params );		}		return ( $this->_params = arrayMapMerge( $this->_params, $params ) );	}	public function addParam( $paramKey, $paramValue )	{		$this->_params[$paramKey] = $paramValue;	}	public function getParams()	{		return $this->_params;	}	public function getParam( $paramKey )	{		if( !$this->_params[$paramKey] ) return null;		return $this->_params[$paramKey];	}	public function getTemplateName()	{		return $this->_templateName;	}	private function _loadTemplate( $templateName )	{		if ($template = $this->_loadTemplateFilePath( $templateName ) )		{			return $template;		}		elseif( $template = $this->_loadTemplateFromCache( $templateName ) )		{			return $template;		}		else		{			$this->_loadTemplates();			return $this->_loadTemplateFromCache( $templateName );		}	}	private function _loadTemplateFromCache( $templateName )	{		if ( isset( $this->_templateCache[$templateName] ) )		{			return $this->_templateCache[$templateName];		}		else		{			$this->_templateCache[$templateName] = '';			return '';		}	}	protected function _loadTemplates()	{		$toLoad = $this->getToLoadList();		if (!$toLoad)		{			return;		}		$templates = $this->_getTemplatesFromDataSource( array_keys( $toLoad ) );		if ( $templates )		{			$this->_mergeIntoTemplateCache( $templates );		}		$this->_resetToLoadList();	}	protected function _getTemplatesFromDataSource(array $templateList)	{		$db = vF_GetvF::get( 'Db' );		return $db->fetchPairs('			SELECT title, template_compiled			FROM ' . $db->tableName( 'template_compiled' ) . '			WHERE title IN (' . $db->e( $templateList ) . ')				AND style_id = '. $this->_styleId .'				AND language_id = '. $this->_languageId .'		');	}	public function loadTemplate( $templateName, $themeParams, $registerSystemParams = true )	{	}	public function render( $templateName, $contents, $params )	{	}	public function printResult( $content )	{		//vF_hook::getInstance()->parseHook( 'printResultStart' );		$this->print_header();		echo $content;		// vF_hook::getInstance()->parseHook( 'printResultEnd' );	}}