<?php vF_Check();# ----------------------# Class: Language# Author: Yplit# Date: 14/6/2012#-----------------------class vF_language{	private static $_instance;	public $currentLanguage;	public $listLanguage;	public $phrase;	public $vF;	public function __construct()	{		//$this->vF = $GLOBALS['vF'];		$this->listLanguage = $this->getAllLanguage();		$languageCookie = vF_input::getInstance()->getCookie( 'language', '' );		if( !empty( $languageCookie ) and in_array( $languageCookie, array_keys( $this->list_language ) ) )		{			$this->setCurentLanguage( $GLOBALS['vF']->Options->vf_forum_language );		}		if( !$this->phrase )		{				$this->phrase = $this->_getPhraseFromCache();			if( !$this->phrase )			{				$this->phrase = $this->getAllPhraseFromDatabase();				$this->_renewCache();			}		}	}	public static function getInstance()	{		if( !self::$_instance )		{			self::$_instance = new self();		}		return self::$_instance;	}	public function getPhrase( $varName )	{		if( !$this->phrase )		{			if( $this->_isCache() )			{				$this->phrase = $this->_getPhraseFromCache();			}			else			{				$this->phrase = $this->getAllPhraseFromDatabase();				$this->_renewCache();			}		}		return ( !empty( $this->phrase[$varName] ) ? $this->phrase[$varName] : '' );	}	public function getAllPhrase()	{	}	private function _isCache()	{	}	private function _getPhraseFromCache()	{		$cache = vF_cache::getInstance()->loadCache( 'phrase' );		return ( $cache ? $cache : false );	}	private function _renewCache()	{		vF_cache::getInstance()->newCache( 'phrase', $this->phrase );	}	public function setCurentLanguage( $language )	{		$this->current_language = $language;	}	public function getAllLanguage()	{		$db = vF_getVf::get('Db');		$db->query( 'SELECT * FROM `' . $db->tableName( 'languages' ) . '` WHERE `activeLanguage` = 1' );		if( $db->nums() == 0 ) return array();		$return = array();		while( $result = $db->fetchrow() )		{			$return[] = array( 'languageID' => $result['languageID'], 'languageName' => $result['languageName'], 'userCanChoose' => $result['userCanChoose'] );		}		$db->free_result();		return $return;	}	public function getAllPhraseFromDatabase()	{		$db = vF_getVf::get( 'Db' );		$db->query( 'SELECT * FROM `'. $db->tableName( 'phrases' ) .'`' );		if( $db->nums() == 0 ) return array();		$return = array();		while( $result = $db->fetchrow() )		{			$return[$result['phraseName']] = $result['phraseText'];		}		return ( $return ? $return : array() );	}}